set nocp
filetype off

set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'fbq/mvp'
Plugin 'snipMate'
Plugin 'fatih/vim-go'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-fugitive'
Plugin 'vim-pandoc/vim-pandoc-syntax'
Plugin 'vim-pandoc/vim-pandoc'
Plugin 'rust-lang/rust.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'racer-rust/vim-racer'
call vundle#end()

filetype on
filetype indent on
filetype plugin on

syntax on
set nu

" setting for js
au FileType javascript setlocal sw=4 sts=4 et ts=4 sta si
au FileType html,xhtml setlocal sw=4 sts=4 et ts=4 sta si

" setting for python
au FileType python setlocal sw=4 sts=4 et ts=4 sta si

" setting for scheme
au FileType scheme setlocal sw=2 sts=2 et sta si

" setting for haskell
au FileType haskell setlocal sw=4 sts=4 et sta si

" setting for tex
au FileType tex setlocal sw=4 sts=4 et sta si
set grepprg=grep\ -nH\ $*
let g:tex_flavor = "xelatex"
let g:Tex_DefaultTargetFormat = "pdf"

" seting for yaml
au FileType yaml setlocal sw=2 sts=2 et sta si

" settig for markdown
au FileType mkd setlocal sw=4 sts=4 et ts=4 sta si

" setting for java
au FileType java setlocal sw=4 sts=4 et ts=4 sta si

" setting for markdown
autocmd BufNewFile,BufReadPost *.md setlocal filetype=markdown

" setting for cscope
cs add ./cscope.out
set cscopequickfix=s-,c-,d-,i-,t-,e-,g-
set cscopetag

" always show the status line
set laststatus=2

" add ./include into the path to find header file
set path+=include

" make mouse event processible by terminal version vim
set mouse=a

au FileType c,cpp setlocal ts=8 sw=8 noet sts=0 colorcolumn=80
highlight ColorColumn ctermbg=darkgrey                                         
set colorcolumn=+1 " highlight column after 'textwidth'                        

"let g:go_auto_type_info = 1
let mapleader = '\'

let g:pandoc#spell#enabled = 0
nmap gy :YDCVCursor<Enter>
vmap gy :YDCVRange<Enter>

" remember 1000 file location, and ignore /tmp/*
set viminfo='1000,r/tmp,n~/.viminfo

" restore via viminfo record
function! ResCur()
  if line("'\"") <= line("$")
    normal! g`"
    return 1
  endif
endfunction

augroup resCur
  autocmd!
  autocmd BufWinEnter * call ResCur()
augroup END

" set keybinding in cmdline mode
cnoremap <C-A> <Home>
cnoremap <C-F> <Right>
cnoremap <C-B> <Left>
cnoremap <Esc>b <S-Left>
cnoremap <Esc>f <S-Right>

" clang-format settings:
map <C-K> :pyf /usr/share/clang/clang-format.py<cr>
imap <C-K> <c-o>:pyf /usr/share/clang/clang-format.py<cr>
"set list lcs=tab:\Â¦\
"
set hidden
let g:racer_cmd = "/home/fixme/racer/target/release/racer"
let $RUST_SRC_PATH="/home/fixme/rust/src/"
